/**
 */
package org.educsos.dovamo.genericDelta.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.educsos.dovamo.genericDelta.GenericDeltaPackage;

import org.educsos.dovamo.genericDelta.util.GenericDeltaAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GenericDeltaItemProviderAdapterFactory extends GenericDeltaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(GenericDeltaEditPlugin.INSTANCE, GenericDeltaPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GenericDeltaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.Delta} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeltaItemProvider deltaItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.Delta}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeltaAdapter() {
		if (deltaItemProvider == null) {
			deltaItemProvider = new DeltaItemProvider(this);
		}

		return deltaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.SetSingleAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetSingleAttDeltaOpItemProvider setSingleAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.SetSingleAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetSingleAttDeltaOpAdapter() {
		if (setSingleAttDeltaOpItemProvider == null) {
			setSingleAttDeltaOpItemProvider = new SetSingleAttDeltaOpItemProvider(this);
		}

		return setSingleAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.UnsetSingleAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsetSingleAttDeltaOpItemProvider unsetSingleAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.UnsetSingleAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsetSingleAttDeltaOpAdapter() {
		if (unsetSingleAttDeltaOpItemProvider == null) {
			unsetSingleAttDeltaOpItemProvider = new UnsetSingleAttDeltaOpItemProvider(this);
		}

		return unsetSingleAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.UnsetSingleRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsetSingleRefDeltaOpItemProvider unsetSingleRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.UnsetSingleRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsetSingleRefDeltaOpAdapter() {
		if (unsetSingleRefDeltaOpItemProvider == null) {
			unsetSingleRefDeltaOpItemProvider = new UnsetSingleRefDeltaOpItemProvider(this);
		}

		return unsetSingleRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.SetSingleRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetSingleRefDeltaOpItemProvider setSingleRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.SetSingleRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetSingleRefDeltaOpAdapter() {
		if (setSingleRefDeltaOpItemProvider == null) {
			setSingleRefDeltaOpItemProvider = new SetSingleRefDeltaOpItemProvider(this);
		}

		return setSingleRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.InsertAtIndexMultiRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InsertAtIndexMultiRefDeltaOpItemProvider insertAtIndexMultiRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.InsertAtIndexMultiRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInsertAtIndexMultiRefDeltaOpAdapter() {
		if (insertAtIndexMultiRefDeltaOpItemProvider == null) {
			insertAtIndexMultiRefDeltaOpItemProvider = new InsertAtIndexMultiRefDeltaOpItemProvider(this);
		}

		return insertAtIndexMultiRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.AddByValueMultiRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddByValueMultiRefDeltaOpItemProvider addByValueMultiRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.AddByValueMultiRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddByValueMultiRefDeltaOpAdapter() {
		if (addByValueMultiRefDeltaOpItemProvider == null) {
			addByValueMultiRefDeltaOpItemProvider = new AddByValueMultiRefDeltaOpItemProvider(this);
		}

		return addByValueMultiRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.RemoveByValueMultiRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveByValueMultiRefDeltaOpItemProvider removeByValueMultiRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.RemoveByValueMultiRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveByValueMultiRefDeltaOpAdapter() {
		if (removeByValueMultiRefDeltaOpItemProvider == null) {
			removeByValueMultiRefDeltaOpItemProvider = new RemoveByValueMultiRefDeltaOpItemProvider(this);
		}

		return removeByValueMultiRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.ClearMultiRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClearMultiRefDeltaOpItemProvider clearMultiRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.ClearMultiRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClearMultiRefDeltaOpAdapter() {
		if (clearMultiRefDeltaOpItemProvider == null) {
			clearMultiRefDeltaOpItemProvider = new ClearMultiRefDeltaOpItemProvider(this);
		}

		return clearMultiRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.DeleteByIndexMultiRefDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteByIndexMultiRefDeltaOpItemProvider deleteByIndexMultiRefDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.DeleteByIndexMultiRefDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteByIndexMultiRefDeltaOpAdapter() {
		if (deleteByIndexMultiRefDeltaOpItemProvider == null) {
			deleteByIndexMultiRefDeltaOpItemProvider = new DeleteByIndexMultiRefDeltaOpItemProvider(this);
		}

		return deleteByIndexMultiRefDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.ReplaceAtRefMacro} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceAtRefMacroItemProvider replaceAtRefMacroItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.ReplaceAtRefMacro}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplaceAtRefMacroAdapter() {
		if (replaceAtRefMacroItemProvider == null) {
			replaceAtRefMacroItemProvider = new ReplaceAtRefMacroItemProvider(this);
		}

		return replaceAtRefMacroItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.DeltaRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeltaRepositoryItemProvider deltaRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.DeltaRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeltaRepositoryAdapter() {
		if (deltaRepositoryItemProvider == null) {
			deltaRepositoryItemProvider = new DeltaRepositoryItemProvider(this);
		}

		return deltaRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.MoveContained} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveContainedItemProvider moveContainedItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.MoveContained}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveContainedAdapter() {
		if (moveContainedItemProvider == null) {
			moveContainedItemProvider = new MoveContainedItemProvider(this);
		}

		return moveContainedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.AddByValueMultiAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddByValueMultiAttDeltaOpItemProvider addByValueMultiAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.AddByValueMultiAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddByValueMultiAttDeltaOpAdapter() {
		if (addByValueMultiAttDeltaOpItemProvider == null) {
			addByValueMultiAttDeltaOpItemProvider = new AddByValueMultiAttDeltaOpItemProvider(this);
		}

		return addByValueMultiAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.InsertAtIndexMultiAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InsertAtIndexMultiAttDeltaOpItemProvider insertAtIndexMultiAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.InsertAtIndexMultiAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInsertAtIndexMultiAttDeltaOpAdapter() {
		if (insertAtIndexMultiAttDeltaOpItemProvider == null) {
			insertAtIndexMultiAttDeltaOpItemProvider = new InsertAtIndexMultiAttDeltaOpItemProvider(this);
		}

		return insertAtIndexMultiAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.DeleteByIndexMultiAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteByIndexMultiAttDeltaOpItemProvider deleteByIndexMultiAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.DeleteByIndexMultiAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteByIndexMultiAttDeltaOpAdapter() {
		if (deleteByIndexMultiAttDeltaOpItemProvider == null) {
			deleteByIndexMultiAttDeltaOpItemProvider = new DeleteByIndexMultiAttDeltaOpItemProvider(this);
		}

		return deleteByIndexMultiAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.RemoveByValueMultiAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveByValueMultiAttDeltaOpItemProvider removeByValueMultiAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.RemoveByValueMultiAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveByValueMultiAttDeltaOpAdapter() {
		if (removeByValueMultiAttDeltaOpItemProvider == null) {
			removeByValueMultiAttDeltaOpItemProvider = new RemoveByValueMultiAttDeltaOpItemProvider(this);
		}

		return removeByValueMultiAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.ClearMultiAttDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClearMultiAttDeltaOpItemProvider clearMultiAttDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.ClearMultiAttDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClearMultiAttDeltaOpAdapter() {
		if (clearMultiAttDeltaOpItemProvider == null) {
			clearMultiAttDeltaOpItemProvider = new ClearMultiAttDeltaOpItemProvider(this);
		}

		return clearMultiAttDeltaOpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.ReplaceAtAttMacro} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceAtAttMacroItemProvider replaceAtAttMacroItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.ReplaceAtAttMacro}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplaceAtAttMacroAdapter() {
		if (replaceAtAttMacroItemProvider == null) {
			replaceAtAttMacroItemProvider = new ReplaceAtAttMacroItemProvider(this);
		}

		return replaceAtAttMacroItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.educsos.dovamo.genericDelta.InitializeRootObjectDeltaOp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitializeRootObjectDeltaOpItemProvider initializeRootObjectDeltaOpItemProvider;

	/**
	 * This creates an adapter for a {@link org.educsos.dovamo.genericDelta.InitializeRootObjectDeltaOp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitializeRootObjectDeltaOpAdapter() {
		if (initializeRootObjectDeltaOpItemProvider == null) {
			initializeRootObjectDeltaOpItemProvider = new InitializeRootObjectDeltaOpItemProvider(this);
		}

		return initializeRootObjectDeltaOpItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (deltaItemProvider != null) deltaItemProvider.dispose();
		if (setSingleAttDeltaOpItemProvider != null) setSingleAttDeltaOpItemProvider.dispose();
		if (unsetSingleAttDeltaOpItemProvider != null) unsetSingleAttDeltaOpItemProvider.dispose();
		if (unsetSingleRefDeltaOpItemProvider != null) unsetSingleRefDeltaOpItemProvider.dispose();
		if (setSingleRefDeltaOpItemProvider != null) setSingleRefDeltaOpItemProvider.dispose();
		if (insertAtIndexMultiRefDeltaOpItemProvider != null) insertAtIndexMultiRefDeltaOpItemProvider.dispose();
		if (addByValueMultiRefDeltaOpItemProvider != null) addByValueMultiRefDeltaOpItemProvider.dispose();
		if (removeByValueMultiRefDeltaOpItemProvider != null) removeByValueMultiRefDeltaOpItemProvider.dispose();
		if (clearMultiRefDeltaOpItemProvider != null) clearMultiRefDeltaOpItemProvider.dispose();
		if (deleteByIndexMultiRefDeltaOpItemProvider != null) deleteByIndexMultiRefDeltaOpItemProvider.dispose();
		if (replaceAtRefMacroItemProvider != null) replaceAtRefMacroItemProvider.dispose();
		if (deltaRepositoryItemProvider != null) deltaRepositoryItemProvider.dispose();
		if (moveContainedItemProvider != null) moveContainedItemProvider.dispose();
		if (addByValueMultiAttDeltaOpItemProvider != null) addByValueMultiAttDeltaOpItemProvider.dispose();
		if (insertAtIndexMultiAttDeltaOpItemProvider != null) insertAtIndexMultiAttDeltaOpItemProvider.dispose();
		if (deleteByIndexMultiAttDeltaOpItemProvider != null) deleteByIndexMultiAttDeltaOpItemProvider.dispose();
		if (removeByValueMultiAttDeltaOpItemProvider != null) removeByValueMultiAttDeltaOpItemProvider.dispose();
		if (clearMultiAttDeltaOpItemProvider != null) clearMultiAttDeltaOpItemProvider.dispose();
		if (replaceAtAttMacroItemProvider != null) replaceAtAttMacroItemProvider.dispose();
		if (initializeRootObjectDeltaOpItemProvider != null) initializeRootObjectDeltaOpItemProvider.dispose();
	}

}
